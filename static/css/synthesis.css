/*
  SYNTHESIS PAGE STYLESHEET (High-Specificity Rewrite)
  These rules are prefixed to override any global styles from layout.html
*/

/* ===== START OF CHANGES ===== */
body.full-height-body .synthesis-container {
    display: grid;
    /* Change the grid to have three columns: left pane, resizer, right pane */
    /* We will control the widths with JavaScript, but this sets a reasonable default. */
    grid-template-columns: 1fr auto minmax(400px, 35%);
    gap: 0; /* Gap is now handled by the resizer element */
    width: 100%;
    height: 100%;
}

/* Style the resizer handle */
.resizer-vertical {
    background-color: var(--border-color);
    cursor: col-resize;
    width: 5px;
    height: 100%;
    transition: background-color 0.2s ease-in-out;
}
.resizer-vertical:hover {
    background-color: var(--brand-red-cool);
}
/* This class will be added to the body during resize to prevent text selection */
body.is-resizing * {
    user-select: none;
    pointer-events: none;
}
body.is-resizing {
    cursor: col-resize;
}
/* ===== END OF CHANGES ===== */

/* Define the behavior of the two main columns */
body.full-height-body .synthesis-main-area,
body.full-height-body .synthesis-sidebar {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    min-height: 0; /* Critical for nested flex scrolling */
    padding: 0 0.5rem; /* Add some padding since we removed the gap */
}

/* Ensure the panel inside the right sidebar fills the available space */
body.full-height-body .synthesis-sidebar > .panel {
    flex-grow: 1;
}

/* And ensure the body of that panel also grows */
body.full-height-body .synthesis-sidebar > .panel > .panel-body {
    flex-grow: 1;
}

/* Make sure the viewer container stretches to the bottom */
body.full-height-body #reference-viewer-container {
    flex-grow: 1;
    min-height: 0; /* Allows it to shrink and grow correctly */
}

/* Define behavior for panels inside the main (left) area */
body.full-height-body #editor-pane {
    flex-grow: 1;
    min-height: 0;
}
body.full-height-body #bibliography-pane {
    flex-basis: 35%;
    flex-shrink: 0;
}

/* General component styles within the synthesis page */
body.full-height-body .panel {
    display: flex;
    flex-direction: column;
}
body.full-height-body .panel-body {
    display: flex;
    flex-direction: column;
    padding: 1rem;
}
body.full-height-body .pane-header {
    padding: 1rem;
    margin: 0;
    border-bottom: 1px solid var(--border-color);
    font-size: 1.2rem;
    font-weight: 500;
    flex-shrink: 0;
}
body.full-height-body #tiptap-editor {
    flex-grow: 1;
    overflow-y: auto;
    padding: 1rem;
}
body.full-height-body #bibliography-pane {
    overflow-y: auto;
    padding: 1rem;
}
body.full-height-body #reference-viewer-container {
    margin-top: 1rem;
    overflow: hidden;
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius);
}
body.full-height-body #reference-viewer {
    width: 100%;
    height: 100%;
    border: none;
    background-color: var(--background-dark);
}
body.full-height-body .search-results-panel {
    margin-top: 1rem;
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius);
    max-height: 250px;
    overflow-y: auto;
    flex-shrink: 0;
}
body.full-height-body .search-result-item a {
    display: block;
    padding: 0.5rem 0.75rem;
    color: var(--link-color);
    text-decoration: none;
}
body.full-height-body .search-result-item a:hover {
    background-color: var(--background-light);
}
/* (The rest of the non-layout styles remain unchanged) */
.editor-header { display: flex; justify-content: space-between; align-items: center; }
.save-status-indicator { font-size: 0.9em; color: var(--text-muted); font-style: italic; transition: opacity 0.3s ease; }
.ProseMirror { outline: none; height: 100%; }
.ProseMirror p.is-editor-empty:first-child::before { content: attr(data-placeholder); float: left; color: var(--text-muted); pointer-events: none; height: 0; }
.citation-pill { display: inline-block; background-color: var(--background-light); color: var(--link-color); padding: 0.1em 0.6em; border-radius: 99px; border: 1px solid var(--border-color); cursor: pointer; transition: all 0.2s ease; margin: 0 0.2em; }
.citation-pill:hover { background-color: var(--redleaf-red); color: white; border-color: var(--redleaf-red-hover); text-decoration: none; transform: translateY(-1px); }
.cite-popup { position: fixed; background-color: var(--background-dark); border: 1px solid var(--redleaf-red); padding: 0.5rem; border-radius: var(--border-radius); z-index: 1000; display: flex; gap: 0.5rem; box-shadow: 0 4px 15px rgba(0,0,0,0.4); }
.modal-overlay { position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(10, 10, 10, 0.75); display: none; align-items: flex-start; justify-content: center; z-index: 1010; padding-top: 5vh; opacity: 0; transition: opacity 0.2s ease; }
.modal-overlay.show { display: flex; opacity: 1; }
.modal-dialog { background: var(--background-medium); border: 1px solid var(--border-color); border-radius: var(--border-radius); width: 90%; max-width: 600px; box-shadow: 0 5px 20px rgba(0,0,0,0.5); transform: scale(0.95); transition: transform 0.2s ease; }
.modal-overlay.show .modal-dialog { transform: scale(1); }
.modal-header { display: flex; justify-content: space-between; align-items: center; padding: 1rem 1.5rem; border-bottom: 1px solid var(--border-color); }
.modal-title { margin-bottom: 0; font-size: 1.5rem; }
.modal-close-btn { background: none; border: none; font-size: 2rem; font-weight: 300; line-height: 1; color: var(--text-muted); cursor: pointer; padding: 0; transition: color 0.15s ease; }
.modal-close-btn:hover { color: var(--text-light); }
.modal-body { padding: 1.5rem; }
.modal-footer { padding: 1rem 1.5rem; display: flex; justify-content: space-between; border-top: 1px solid var(--border-color); background-color: var(--background-light); }
.btn-group { display: flex; gap: 0.5rem; }